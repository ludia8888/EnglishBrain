//
// Session.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Session: Codable, JSONEncodable, Hashable {

    public enum Status: String, Codable, CaseIterable {
        case pending = "pending"
        case active = "active"
        case completed = "completed"
        case abandoned = "abandoned"
    }
    public enum Source: String, Codable, CaseIterable {
        case online = "online"
        case offline = "offline"
    }
    public var sessionId: UUID
    public var mode: String
    public var status: Status
    public var startedAt: Date
    public var expiresAt: Date
    public var source: Source?
    public var phases: [SessionPhase]
    public var items: [SessionItem]
    public var summary: SessionSummary?
    public var brainBurst: BrainBurstState?
    public var liveActivity: LiveActivity?

    public init(sessionId: UUID, mode: String, status: Status, startedAt: Date, expiresAt: Date, source: Source? = nil, phases: [SessionPhase], items: [SessionItem], summary: SessionSummary? = nil, brainBurst: BrainBurstState? = nil, liveActivity: LiveActivity? = nil) {
        self.sessionId = sessionId
        self.mode = mode
        self.status = status
        self.startedAt = startedAt
        self.expiresAt = expiresAt
        self.source = source
        self.phases = phases
        self.items = items
        self.summary = summary
        self.brainBurst = brainBurst
        self.liveActivity = liveActivity
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sessionId
        case mode
        case status
        case startedAt
        case expiresAt
        case source
        case phases
        case items
        case summary
        case brainBurst
        case liveActivity
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(sessionId, forKey: .sessionId)
        try container.encode(mode, forKey: .mode)
        try container.encode(status, forKey: .status)
        try container.encode(startedAt, forKey: .startedAt)
        try container.encode(expiresAt, forKey: .expiresAt)
        try container.encodeIfPresent(source, forKey: .source)
        try container.encode(phases, forKey: .phases)
        try container.encode(items, forKey: .items)
        try container.encodeIfPresent(summary, forKey: .summary)
        try container.encodeIfPresent(brainBurst, forKey: .brainBurst)
        try container.encodeIfPresent(liveActivity, forKey: .liveActivity)
    }
}

