//
// PatternDefinition.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PatternDefinition: Codable, JSONEncodable, Hashable {

    public enum Focus: String, Codable, CaseIterable {
        case timeAdverb = "time-adverb"
        case frequencyAdverb = "frequency-adverb"
        case article = "article"
        case preposition = "preposition"
        case auxiliary = "auxiliary"
        case tense = "tense"
        case clause = "clause"
    }
    public var patternId: String
    public var label: String
    public var description: String
    public var focus: Focus
    public var example: String?

    public init(patternId: String, label: String, description: String, focus: Focus, example: String? = nil) {
        self.patternId = patternId
        self.label = label
        self.description = description
        self.focus = focus
        self.example = example
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case patternId
        case label
        case description
        case focus
        case example
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(patternId, forKey: .patternId)
        try container.encode(label, forKey: .label)
        try container.encode(description, forKey: .description)
        try container.encode(focus, forKey: .focus)
        try container.encodeIfPresent(example, forKey: .example)
    }
}

