//
// LevelTestAttempt.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct LevelTestAttempt: Codable, JSONEncodable, Hashable {

    static let timeSpentMsRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let hintsUsedRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    public var itemId: String
    public var selectedTokenIds: [String]
    public var timeSpentMs: Int
    public var hintsUsed: Int? = 0

    public init(itemId: String, selectedTokenIds: [String], timeSpentMs: Int, hintsUsed: Int? = 0) {
        self.itemId = itemId
        self.selectedTokenIds = selectedTokenIds
        self.timeSpentMs = timeSpentMs
        self.hintsUsed = hintsUsed
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case itemId
        case selectedTokenIds
        case timeSpentMs
        case hintsUsed
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(itemId, forKey: .itemId)
        try container.encode(selectedTokenIds, forKey: .selectedTokenIds)
        try container.encode(timeSpentMs, forKey: .timeSpentMs)
        try container.encodeIfPresent(hintsUsed, forKey: .hintsUsed)
    }
}

