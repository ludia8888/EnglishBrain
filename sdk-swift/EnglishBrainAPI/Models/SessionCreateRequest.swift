//
// SessionCreateRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SessionCreateRequest: Codable, JSONEncodable, Hashable {

    public enum Mode: String, Codable, CaseIterable {
        case daily = "daily"
        case review = "review"
        case brainBurst = "brain-burst"
        case tutorial = "tutorial"
        case diagnostic = "diagnostic"
    }
    public var mode: Mode
    /** Client surface that started the session. */
    public var entryPoint: String
    public var patternFocus: [String]?
    public var includeAudio: Bool? = true
    public var seedSessionId: String?

    public init(mode: Mode, entryPoint: String, patternFocus: [String]? = nil, includeAudio: Bool? = true, seedSessionId: String? = nil) {
        self.mode = mode
        self.entryPoint = entryPoint
        self.patternFocus = patternFocus
        self.includeAudio = includeAudio
        self.seedSessionId = seedSessionId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case mode
        case entryPoint
        case patternFocus
        case includeAudio
        case seedSessionId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(mode, forKey: .mode)
        try container.encode(entryPoint, forKey: .entryPoint)
        try container.encodeIfPresent(patternFocus, forKey: .patternFocus)
        try container.encodeIfPresent(includeAudio, forKey: .includeAudio)
        try container.encodeIfPresent(seedSessionId, forKey: .seedSessionId)
    }
}

