//
// ReviewPlan.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ReviewPlan: Codable, JSONEncodable, Hashable {

    public enum Status: String, Codable, CaseIterable {
        case pending = "pending"
        case inProgress = "in-progress"
        case completed = "completed"
        case expired = "expired"
    }
    public var reviewId: UUID
    public var patternId: String
    public var status: Status
    public var scheduledAt: Date
    public var dueAt: Date
    public var items: [ReviewItem]
    public var summary: ReviewSummary?

    public init(reviewId: UUID, patternId: String, status: Status, scheduledAt: Date, dueAt: Date, items: [ReviewItem], summary: ReviewSummary? = nil) {
        self.reviewId = reviewId
        self.patternId = patternId
        self.status = status
        self.scheduledAt = scheduledAt
        self.dueAt = dueAt
        self.items = items
        self.summary = summary
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case reviewId
        case patternId
        case status
        case scheduledAt
        case dueAt
        case items
        case summary
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(reviewId, forKey: .reviewId)
        try container.encode(patternId, forKey: .patternId)
        try container.encode(status, forKey: .status)
        try container.encode(scheduledAt, forKey: .scheduledAt)
        try container.encode(dueAt, forKey: .dueAt)
        try container.encode(items, forKey: .items)
        try container.encodeIfPresent(summary, forKey: .summary)
    }
}

