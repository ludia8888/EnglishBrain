//
// HomeSummary.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct HomeSummary: Codable, JSONEncodable, Hashable {

    public var dailyGoal: HomeSummaryDailyGoal
    public var progress: HomeSummaryProgress
    public var streak: HomeSummaryStreak
    public var brainTokens: HomeSummaryBrainTokens
    public var patternCards: [PatternCard]
    public var recommendedActions: [HomeAction]
    public var liveActivity: LiveActivityInfo?

    public init(dailyGoal: HomeSummaryDailyGoal, progress: HomeSummaryProgress, streak: HomeSummaryStreak, brainTokens: HomeSummaryBrainTokens, patternCards: [PatternCard], recommendedActions: [HomeAction], liveActivity: LiveActivityInfo? = nil) {
        self.dailyGoal = dailyGoal
        self.progress = progress
        self.streak = streak
        self.brainTokens = brainTokens
        self.patternCards = patternCards
        self.recommendedActions = recommendedActions
        self.liveActivity = liveActivity
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case dailyGoal
        case progress
        case streak
        case brainTokens
        case patternCards
        case recommendedActions
        case liveActivity
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(dailyGoal, forKey: .dailyGoal)
        try container.encode(progress, forKey: .progress)
        try container.encode(streak, forKey: .streak)
        try container.encode(brainTokens, forKey: .brainTokens)
        try container.encode(patternCards, forKey: .patternCards)
        try container.encode(recommendedActions, forKey: .recommendedActions)
        try container.encodeIfPresent(liveActivity, forKey: .liveActivity)
    }
}

