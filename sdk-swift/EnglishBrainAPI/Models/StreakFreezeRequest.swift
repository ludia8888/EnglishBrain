//
// StreakFreezeRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct StreakFreezeRequest: Codable, JSONEncodable, Hashable {

    public enum Reason: String, Codable, CaseIterable {
        case travel = "travel"
        case illness = "illness"
        case workload = "workload"
        case other = "other"
    }
    public var targetDate: Date
    public var reason: Reason?
    public var consumeTokenId: String?

    public init(targetDate: Date, reason: Reason? = nil, consumeTokenId: String? = nil) {
        self.targetDate = targetDate
        self.reason = reason
        self.consumeTokenId = consumeTokenId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case targetDate
        case reason
        case consumeTokenId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(targetDate, forKey: .targetDate)
        try container.encodeIfPresent(reason, forKey: .reason)
        try container.encodeIfPresent(consumeTokenId, forKey: .consumeTokenId)
    }
}

