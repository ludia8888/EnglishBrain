//
// StreakFreezeResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct StreakFreezeResponse: Codable, JSONEncodable, Hashable {

    public var targetDate: Date
    public var streakPreserved: Bool
    public var brainTokensRemaining: Int
    public var freezeExpiresAt: Date?

    public init(targetDate: Date, streakPreserved: Bool, brainTokensRemaining: Int, freezeExpiresAt: Date? = nil) {
        self.targetDate = targetDate
        self.streakPreserved = streakPreserved
        self.brainTokensRemaining = brainTokensRemaining
        self.freezeExpiresAt = freezeExpiresAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case targetDate
        case streakPreserved
        case brainTokensRemaining
        case freezeExpiresAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(targetDate, forKey: .targetDate)
        try container.encode(streakPreserved, forKey: .streakPreserved)
        try container.encode(brainTokensRemaining, forKey: .brainTokensRemaining)
        try container.encodeIfPresent(freezeExpiresAt, forKey: .freezeExpiresAt)
    }
}

