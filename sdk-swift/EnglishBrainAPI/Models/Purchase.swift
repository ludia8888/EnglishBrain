//
// Purchase.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Purchase: Codable, JSONEncodable, Hashable {

    public enum Plan: String, Codable, CaseIterable {
        case free = "free"
        case trial = "trial"
        case premium = "premium"
    }
    public enum Status: String, Codable, CaseIterable {
        case active = "active"
        case canceled = "canceled"
        case expired = "expired"
    }
    public var purchaseId: UUID
    public var plan: Plan
    public var status: Status
    public var activeUntil: Date?
    public var updatedAt: Date
    /** Active plan benefits (e.g., unlimited sessions, full review access). */
    public var benefits: [String]?

    public init(purchaseId: UUID, plan: Plan, status: Status, activeUntil: Date? = nil, updatedAt: Date, benefits: [String]? = nil) {
        self.purchaseId = purchaseId
        self.plan = plan
        self.status = status
        self.activeUntil = activeUntil
        self.updatedAt = updatedAt
        self.benefits = benefits
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case purchaseId
        case plan
        case status
        case activeUntil
        case updatedAt
        case benefits
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(purchaseId, forKey: .purchaseId)
        try container.encode(plan, forKey: .plan)
        try container.encode(status, forKey: .status)
        try container.encodeIfPresent(activeUntil, forKey: .activeUntil)
        try container.encode(updatedAt, forKey: .updatedAt)
        try container.encodeIfPresent(benefits, forKey: .benefits)
    }
}

