//
// HomeAction.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct HomeAction: Codable, JSONEncodable, Hashable {

    public enum ModelType: String, Codable, CaseIterable {
        case dailySession = "daily-session"
        case review = "review"
        case brainBurst = "brain-burst"
        case widget = "widget"
        case tutorial = "tutorial"
    }
    public enum PlanRequired: String, Codable, CaseIterable {
        case free = "free"
        case pro = "pro"
    }
    public var type: ModelType
    public var title: String
    public var subtitle: String?
    public var deeplink: String
    /** Indicates if the action requires a specific plan tier. */
    public var planRequired: PlanRequired?

    public init(type: ModelType, title: String, subtitle: String? = nil, deeplink: String, planRequired: PlanRequired? = nil) {
        self.type = type
        self.title = title
        self.subtitle = subtitle
        self.deeplink = deeplink
        self.planRequired = planRequired
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case title
        case subtitle
        case deeplink
        case planRequired
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encode(title, forKey: .title)
        try container.encodeIfPresent(subtitle, forKey: .subtitle)
        try container.encode(deeplink, forKey: .deeplink)
        try container.encodeIfPresent(planRequired, forKey: .planRequired)
    }
}

