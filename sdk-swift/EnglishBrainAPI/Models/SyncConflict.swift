//
// SyncConflict.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SyncConflict: Codable, JSONEncodable, Hashable {

    public enum ResourceType: String, Codable, CaseIterable {
        case session = "session"
        case attempt = "attempt"
        case checkpoint = "checkpoint"
    }
    public enum Reason: String, Codable, CaseIterable {
        case duplicate = "duplicate"
        case stale = "stale"
        case validationError = "validation_error"
    }
    public var resourceId: String
    public var resourceType: ResourceType
    public var reason: Reason
    public var serverVersion: [String: AnyCodable]?
    public var clientVersion: [String: AnyCodable]?

    public init(resourceId: String, resourceType: ResourceType, reason: Reason, serverVersion: [String: AnyCodable]? = nil, clientVersion: [String: AnyCodable]? = nil) {
        self.resourceId = resourceId
        self.resourceType = resourceType
        self.reason = reason
        self.serverVersion = serverVersion
        self.clientVersion = clientVersion
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case resourceId
        case resourceType
        case reason
        case serverVersion
        case clientVersion
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(resourceId, forKey: .resourceId)
        try container.encode(resourceType, forKey: .resourceType)
        try container.encode(reason, forKey: .reason)
        try container.encodeIfPresent(serverVersion, forKey: .serverVersion)
        try container.encodeIfPresent(clientVersion, forKey: .clientVersion)
    }
}

