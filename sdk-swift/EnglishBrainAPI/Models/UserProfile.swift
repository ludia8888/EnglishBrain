//
// UserProfile.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct UserProfile: Codable, JSONEncodable, Hashable {

    static let levelRule = NumericRule<Int>(minimum: 1, exclusiveMinimum: false, maximum: 5, exclusiveMaximum: false, multipleOf: nil)
    static let provisionalLevelRule = NumericRule<Int>(minimum: 1, exclusiveMinimum: false, maximum: 5, exclusiveMaximum: false, multipleOf: nil)
    public var userId: UUID
    public var email: String
    public var displayName: String
    public var level: Int
    /** Interim level recommendation prior to consolidation with early sessions. */
    public var provisionalLevel: Int
    /** IANA timezone identifier. */
    public var timezone: String
    /** BCP 47 language tag. */
    public var locale: String
    public var preferences: UserPreferences
    public var stats: UserStats
    public var flags: UserFlags
    public var createdAt: Date
    public var updatedAt: Date

    public init(userId: UUID, email: String, displayName: String, level: Int, provisionalLevel: Int, timezone: String, locale: String, preferences: UserPreferences, stats: UserStats, flags: UserFlags, createdAt: Date, updatedAt: Date) {
        self.userId = userId
        self.email = email
        self.displayName = displayName
        self.level = level
        self.provisionalLevel = provisionalLevel
        self.timezone = timezone
        self.locale = locale
        self.preferences = preferences
        self.stats = stats
        self.flags = flags
        self.createdAt = createdAt
        self.updatedAt = updatedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case userId
        case email
        case displayName
        case level
        case provisionalLevel
        case timezone
        case locale
        case preferences
        case stats
        case flags
        case createdAt
        case updatedAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(userId, forKey: .userId)
        try container.encode(email, forKey: .email)
        try container.encode(displayName, forKey: .displayName)
        try container.encode(level, forKey: .level)
        try container.encode(provisionalLevel, forKey: .provisionalLevel)
        try container.encode(timezone, forKey: .timezone)
        try container.encode(locale, forKey: .locale)
        try container.encode(preferences, forKey: .preferences)
        try container.encode(stats, forKey: .stats)
        try container.encode(flags, forKey: .flags)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(updatedAt, forKey: .updatedAt)
    }
}

